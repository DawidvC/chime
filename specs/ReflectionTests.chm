implementation ReflectionTests : Test.Case
{
    method test_class_name()
    {
        Assert.equal("ReflectionTests", to:ReflectionTests.name)
    }
    
    method test_self_class()
    {
        Assert.is_true(ReflectionTests == self.class)
    }
    
    method test_self_class_name()
    {
        Assert.equal("ReflectionTests", to:self.class.name)
    }
    
    method test_method_names()
    {
        methods = Object.new().methods
        
        Assert.equal(13, to:methods.length)
        
        Assert.equal("initialize", to:methods[0].name)
        Assert.equal("class",      to:methods[1].name)
        Assert.equal("superclass", to:methods[2].name)
        Assert.equal("methods",    to:methods[3].name)
        Assert.equal("invoke:",    to:methods[4].name)
        Assert.equal("hash",       to:methods[5].name)
        Assert.equal("to_string",  to:methods[6].name)
        Assert.equal("==",         to:methods[7].name)
        Assert.equal("===",        to:methods[8].name)
        Assert.equal(">",          to:methods[9].name)
        Assert.equal("<",          to:methods[10].name)
        Assert.equal("<=",         to:methods[11].name)
        Assert.equal(">=",         to:methods[12].name)
    }
}
