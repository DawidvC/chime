implementation ControlTests : Test.Case
{
    method test_if_executes_only_next_statement()
    {
        if true
            return
        
        Assert.failure()
    }
    
    method test_if_executes_on_true_expression()
    {
        if (0 > 1)
            Assert.failure()
    }
    
    method test_if_executes_on_true_expression_with_local_variable()
    {
        a = 1
        
        if (a > 0)
            return
        
        Assert.failure()
    }
    
    method test_ifs_with_boolean_literals()
    {
        if false
            Assert.failure()
        
        if true
            Assert.is_true(true)
        else
            Assert.failure()
        
        if true
        {
            Assert.is_true(true)
        }
        else
        {
            Assert.failure()
        }
    }
    
    method test_switch_statement()
    {
        a = 10
        
        switch a
        {
            case 0
                a = 0
                Assert.failure()
            case 1
                a = 1
                Assert.failure()
            case 10
                a = 100
            else
                a = 2
                Assert.failure()
        }
        
        Assert.equal(a, to:100)
    }
    
    method test_while_loop()
    {
        a = 0
        
        while a < 5
        {
            a += 1
        }
        
        Assert.equal(a, to:5)
    }
}
